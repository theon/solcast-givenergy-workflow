name: Set Battery Grid Charge
on:
  schedule:
    - cron: '22,23,0 0 * * *'
  workflow_dispatch:

jobs:
  set-battery-charge:
    runs-on: ubuntu-latest
    steps:
      - name: 'Install jq'
        uses: dcarbone/install-jq-action@v2
      - id: get-sunshine-prediction
        name: 'Get Sunshine Prediction'
        run: |
          TOMORROW=$(date -d"+1 days" +%Y-%m-%d)
          echo "Getting sunshine forecast for $TOMORROW"
          
          PREDICTIONS_FILE="/tmp/solcast_predictions.json"
          
          # curl -v "https://api.solcast.com.au/rooftop_sites/${{ secrets.SOLCAST_SITE }}/forecasts?format=json" \
          #  --header "Authorization: Bearer ${{ secrets.SOLCAST_API_KEY }}" > $PREDICTIONS_FILE
          
          echo '{"forecasts":[{"pv_estimate":10,"pv_estimate10":0,"pv_estimate90":0,"period_end":"2024-02-04T17:30:00.0000000Z","period":"PT30M"}]}' > $PREDICTIONS_FILE 
          cat $PREDICTIONS_FILE
          
          KWH_PREDICTION=$(
              echo $KW_PREDICTIONS | \
              jq ".forecasts[]  | select(.period_end | contains('$TOMORROW')) | .pv_estimate" $PREDICTIONS_FILE | \
              awk '{ sum += $1 } END { print sum }'
          )

          echo "Predicted solar energy for $TOMORROW is ${KWH_PREDICTION}kWh"
          echo "KWH_PREDICTION=$KWH_PREDICTION" >> $GITHUB_OUTPUT

      - id: set-battery-charge-percentage
        name: 'Set Battery Charge Percentage'
        if: false
        run: |
          BATTERY_CAPACITY_KWH=9.52
          EXPECTED_CONSUMPTION_KWH=12
          KWH_PREDICTION=${{ steps.get-sunshine-prediction.KWH_PREDICTION }}"
          
          let "SHORT_FALL_KWH=$EXPECTED_CONSUMPTION_KWH-$KWH_PREDICTION"
          echo "Expecting to need ${SHORT_FALL_KWH}kWh from the grid tomorrow"
          
          let "CHARGE_PERCENT=$SHORT_FALL_KWH/$BATTERY_CAPACITY_KWH*100"
          echo "Setting battery to charge to ${CHARGE_PERCENT}%"
          
          CHARGE_PERCENT=$((CHARGE_PERCENT>90 ? 90: CHARGE_PERCENT))
          CHARGE_PERCENT=$((CHARGE_PERCENT<30 ? 30: CHARGE_PERCENT))
          
          curl -v "https://api.givenergy.cloud/v1/inverter/${{ secrets.GIVENERGY_INVERTER_SERIAL_NUM }}/settings/77/write" \
            --header 'Content-Type: application/json' \
            --header 'Accept: application/json' \
            --header "Authorization: Bearer ${{ secrets.GIVENERGY_API_KEY }}" \
            --data "{\"value\":\"$CHARGE_PERCENT\",\"context\":\"Set by github workflow schedule\"}"
          
          
          
